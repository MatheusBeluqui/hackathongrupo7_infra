name: 'Terraform'

on:
  push:
    branches:
      - "main"
  pull_request:

permissions:
  contents: read

jobs:
  terraform_hom:
    name: 'Terraform - Hom'
    runs-on: ubuntu-latest
    environment: hom  # Nome do ambiente conforme suas configurações

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init - Hom
        run: terraform init -backend-config=environments/hom/backend.tfvars  # Adapte conforme necessário

      - name: Terraform Format - Hom
        run: terraform fmt -check

      - name: Terraform Plan - Hom
        run: terraform plan -input=false

      - name: Terraform Apply - Hom
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false

  terraform_prod:
    name: 'Terraform - Prod'
    runs-on: ubuntu-latest
    environment: prod  # Nome do ambiente conforme suas configurações

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init - Prd
        run: terraform init -backend-config=environments/prd/backend.tfvars  # Adapte conforme necessário

      - name: Terraform Format - Prd
        run: terraform fmt -check

      - name: Terraform Plan - Prd
        run: terraform plan -input=false

      - name: Terraform Apply - Prd
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
